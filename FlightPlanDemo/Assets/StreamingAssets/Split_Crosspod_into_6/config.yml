# input configuration file to the animation

experiment_info:
  hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/"
  intro_text: "In this experiment, the Program is split into six parts: five supporting devices for booster offloading + connected switch for routing. All the boosters are active"

static_tags:
  - node: p0e0
    text: "All the three boosters are active - Forward Error Correction (FEC), Memcached (MCD), Header Compression (HC)."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits/ALV_Complete/ALV_Complete.p4"

  - node: S2_1
    text: "Lost packets are recovered. Header is decompressed."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - node: S2_2
    text: "Decompress the header which was compressed on p0e0."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - node: S2_3
    text: "MCD Booster - provides in-network caching of memcached entries."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - node: S2_4
    text: "MCD Booster - provides in-network caching of memcached entries."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - node: S2_5
    text: "FEC(Forward Error Correction) encoder."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - node: p0h0
    text: "This is the source host."
    hyperlink: null

  - node: p1h0
    text: "This is the destination host."
    hyperlink: null

event_tags:
  - time: 6348
    node: p0e0
    text: "header compression booster compresses header bytes. The packet turning from blue to pink shows that it is now a compressed packet."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits/ALV_Complete/ALV_Complete.p4"

  - time: 16740
    node: S2_2
    text: "At S2_2 pink packet turns blue. This shows that the compressed packet has been decompressed now."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - time: 8030086
    node: p0e0
    text: "Now silver colored parity packet will travel from p0e0 to p0a0."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits/ALV_Complete/ALV_Complete.p4"

  - time: 13046449
    node: S2_1
    text: "S2_1 receives the parity packet. FEC retrieves the lost packet. This can be seen as additional HC packet moving out of p0a0."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

  - time: 98639076
    node: S2_3
    text: "The cached packets reside at S2_3. The orange packet reply from p0a0 offloads the target destination host and sends the cached copy of requested."
    hyperlink: "https://www.github.com/eniac/Flightplan/tree/master/Wharf/splits2/ALV_Complete_2_hl3new/ALV_Complete_split2_hl3new_2.p4"

graph:
  show: "n"
  x_div: 1000000
  x_label: "time (sec)"
  y_label: "# packets received at receiver"
  title: ""
  curve_info:
    - file_name: "graph_log1.txt"
      curve_color: "#ffff00"
      legend_text: ""
      curve_width: 1
      packet_target: 

    - file_name: "graph_log2.txt"
      curve_color: "#00ff40"
      legend_text: ""
      curve_width: 1
      packet_target: 


packet_legend:
  - type: "TCP p0h0->p1h0"
    color: "#0000ff"

  - type: "TCP p1h0->p0h0"
    color: "#ffff00"

  - type: "Compressed"
    color: "#ff00ff"

  - type: "MCD Request"
    color: "#0EF3E1"

  - type: "MCD Reply"
    color: "#61D612"

  - type: "MCD Cached"
    color: "#FF8A00"

  - type: "Parity"
    color: "#ffffff"

  - type: "ICMP Request"
    color: "#ff0000"

introduction:
  show: "no"             # choose ("yes", "no")